apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: sregistry-sts
  labels:
  {{- include "sregistry.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
    {{- include "sregistry.selectorLabels" . | nindent 6 }}
  serviceName: {{ .Values.config.uwsgi.host | quote }}
  volumeClaimTemplates:
  - metadata:
      name: static-vol
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: {{ .Values.storageClassName | quote }}
      resources:
        requests:
          storage: 2Gi
  - metadata:
      name: images-vol
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: {{ .Values.storageClassName | quote }}
      resources:
        requests:
          storage: 2Gi
  template:
    metadata:
      labels:
      {{- include "sregistry.selectorLabels" . | nindent 8 }}
    spec:
      securityContext:
      {{- toYaml .Values.podSecurityContext | nindent 8 }}
      volumes:
      - name: shub-vol
        configMap:
          name: shub-config
      containers:
      - name: uwsgi
        securityContext:
        {{- toYaml .Values.securityContext | nindent 12 }}
        image: "{{ .Values.config.sregistry.image }}"
        imagePullPolicy: {{ .Values.pullPolicy }}
        volumeMounts:
        {{- include "sregistry.mounts" . | nindent 8 }}
        envFrom:
        - configMapRef:
            name: minio-config
        ports:
        - name: uwsgi
          containerPort: {{ .Values.config.uwsgi.port }}
          protocol: TCP
      - name: worker
        image: "{{ .Values.config.sregistry.image }}"
        imagePullPolicy: {{ .Values.pullPolicy }}
        volumeMounts:
        {{- include "sregistry.mounts" . | nindent 8 }}
        command: [ "python", "/code/manage.py", "rqworker", "default" ]
        envFrom:
        - configMapRef:
            name: minio-config
      - name: scheduler
        image: "{{ .Values.config.sregistry.image }}"
        imagePullPolicy: {{ .Values.pullPolicy }}
        volumeMounts:
        {{- include "sregistry.mounts" . | nindent 8 }}
        command: [ "python", "/code/manage.py", "rqscheduler" ]
        envFrom:
        - configMapRef:
            name: minio-config
      - name: nginx
        image: "{{ .Values.config.nginx.image }}"
        imagePullPolicy: {{ .Values.pullPolicy }}
        volumeMounts:
        {{- include "sregistry.mounts" . | nindent 8 }}
        - mountPath: /etc/nginx/conf.d/default.conf
          subPath: default.conf
          name: shub-vol
        - mountPath: /etc/nginx/uwsgi_params.par
          subPath: uwsgi_params.par
          name: shub-vol
        ports:
        - name: nginx
          containerPort: {{ .Values.config.nginx.port }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
