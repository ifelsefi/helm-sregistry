{{- if .Values.config.minio.enabled -}}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: minio-sts
  labels:
  {{- include "sregistry.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
    {{- include "sregistry.selectorLabels" . | nindent 6 }}
  serviceName: "minio"
  volumeClaimTemplates:
  - metadata:
      name: minio-vol
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: {{ .Values.storageClassName | quote }}
      resources:
        requests:
          storage: 1Gi
  template:
    metadata:
      labels:
      {{- include "sregistry.selectorLabels" . | nindent 8 }}
    spec:
      securityContext:
      {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
      - name: minio
        securityContext:
        {{- toYaml .Values.securityContext | nindent 12 }}
        image: "{{ .Values.config.minio.image }}"
        imagePullPolicy: {{ .Values.pullPolicy }}
        args: [ "server" , "images" ]
        ports:
        - name: minio
          containerPort: {{ .Values.config.minio.port }}
          protocol: TCP
        volumeMounts:
        - mountPath: /images
          name: minio-vol
        envFrom:
        - configMapRef:
            name: minio-config
        resources:
        {{- toYaml .Values.config.minio.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
